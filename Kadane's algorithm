#include <iostream>
#include <vector>

int kadanesAlgorithm(std::vector<int>& nums) {
    int maxEndingHere = nums[0];
    int maxSoFar = nums[0];

    for (int i = 1; i < nums.size(); i++) {
        maxEndingHere = std::max(nums[i], maxEndingHere + nums[i]);
        maxSoFar = std::max(maxSoFar, maxEndingHere);
    }

    return maxSoFar;
}

int main() {
    std::vector<int> nums = {-2, 1, -3, 4, -1, 2, 1, -5, 4};
    int maxSum = kadanesAlgorithm(nums);
    std::cout << "Maximum subarray sum: " << maxSum << std::endl;

    return 0;
}
