#include <iostream>
#include <vector>

bool isPalindrome(int n) {
    int reversed = 0;
    int original = n;

    while (n > 0) {
        int digit = n % 10;
        reversed = reversed * 10 + digit;
        n /= 10;
    }

    return original == reversed;
}

int largestPalindrome(const std::vector<int>& arr) {
    int currentMax = -1;

    for (int i = 0; i < arr.size(); i++) {
        if (arr[i] > currentMax && isPalindrome(arr[i])) {
            currentMax = arr[i];
        }
    }

    return currentMax;
}

int main() {
    int A[] = {1, 232, 54545, 999991};
    int n = sizeof(A) / sizeof(A[0]);

    std::vector<int> arr(A, A + n);

    int largestPalin = largestPalindrome(arr);

    if (largestPalin != -1) {
        std::cout << "The largest palindrome in the array is: " << largestPalin << std::endl;
    } else {
        std::cout << "No palindrome found in the array." << std::endl;
    }

    return 0;
}

